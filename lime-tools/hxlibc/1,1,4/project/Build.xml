<xml>

<include name="${HXCPP}/build-tool/BuildCommon.xml"/>

<set name="RUNTIME" value="./"/>

<set name="LIBEXTRA" value=".iphoneos-v7" if="iphoneos"/>
<set name="LIBEXTRA" value=".iphoneos" if="iphoneos" unless="HXCPP_ARMV7" />
<set name="LIBEXTRA" value=".iphonesim" if="iphonesim"/>
<set name="LIBEXTRA" value="-x86" if="blackberry"/>
<set name="LIBEXTRA" value="" if="blackberry" unless="simulator" />
<set name="LIBEXTRA" value="-x86" if="tizen"/>
<set name="LIBEXTRA" value="" if="tizen" unless="simulator" />
<set name="LIBPREFIX" value="lib" if="iphoneos"/>
<set name="LIBPREFIX" value="lib" if="iphonesim"/>


<files id="std" dir="${RUNTIME}">
  <depend name="${HXCPP}/include/hx/Macros.h"/>
  <depend name="${HXCPP}/include/hx/CFFI.h"/>

  <file name="libs/std/Sys.cpp"/>
  <file name="libs/std/Xml.cpp"/>
  <file name="libs/std/Process.cpp"/>
  <file name="libs/std/Random.cpp"/>
  <file name="libs/std/Socket.cpp" unless="emscripten" />
  <file name="libs/std/String.cpp"/>
  <file name="libs/std/File.cpp"/>
  <file name="libs/std/Init.cpp"/>
  <file name="libs/std/Misc.cpp"/>
  <file name="libs/std/Interface.cpp"/>


</files>



<target id="std" output="${LIBPREFIX}std${DBG}${LIBEXTRA}" tool="linker" toolid="${STD_MODULE_LINK}">
  <!-- <ext value=".ndll" unless="mobile"/>
  <ext value=".a" if="emscripten"/> -->
  <files id="std"/>
  <lib name="wsock32.lib" if="windows"/>
  <outdir name="../ndll/${BINDIR}"/>
</target>

<set name="PCRE_DIR" value="${RUNTIME}/thirdparty/pcre-7.8"/>

<files id="regexp" dir="${RUNTIME}">
  <depend name="${HXCPP}/include/hx/Macros.h"/>
  <depend name="${HXCPP}/include/hx/CFFI.h"/>

  <compilerflag value="-DPCRE_STATIC"/>
  <compilerflag value="-I${PCRE_DIR}"/>

  <file name="libs/regexp/RegExp.cpp"/>

  <file name="${PCRE_DIR}/pcre_get.c"/>
  <file name="${PCRE_DIR}/pcre_study.c"/>
  <file name="${PCRE_DIR}/pcre_chartables.c"/>
  <file name="${PCRE_DIR}/pcre_globals.c"/>
  <file name="${PCRE_DIR}/pcre_tables.c"/>
  <file name="${PCRE_DIR}/pcre_compile.c"/>
  <file name="${PCRE_DIR}/pcre_info.c"/>
  <file name="${PCRE_DIR}/pcre_try_flipped.c"/>
  <file name="${PCRE_DIR}/pcre_config.c"/>
  <file name="${PCRE_DIR}/pcre_maketables.c"/>
  <file name="${PCRE_DIR}/pcre_ucd.c"/>
  <file name="${PCRE_DIR}/pcre_dfa_exec.c"/>
  <file name="${PCRE_DIR}/pcre_newline.c"/>
  <file name="${PCRE_DIR}/pcre_valid_utf8.c"/>
  <file name="${PCRE_DIR}/pcre_exec.c"/>
  <file name="${PCRE_DIR}/pcre_ord2utf8.c"/>
  <file name="${PCRE_DIR}/pcre_version.c"/>
  <file name="${PCRE_DIR}/pcre_fullinfo.c"/>
  <file name="${PCRE_DIR}/pcre_refcount.c"/>
  <file name="${PCRE_DIR}/pcre_xclass.c"/>

</files>



<target id="regexp" output="${LIBPREFIX}regexp${DBG}${LIBEXTRA}" tool="linker" toolid="${STD_MODULE_LINK}">
  <!-- <ext value=".ndll" unless="mobile"/>
  <ext value=".a" if="emscripten"/> -->
  <files id="regexp"/>
  <outdir name="../ndll/${BINDIR}"/>
</target>

<set name="ZLIB_DIR" value="${RUNTIME}/thirdparty/zlib-1.2.3"/>

<files id="zlib" dir="${RUNTIME}">
  <depend name="${HXCPP}/include/hx/Macros.h"/>
  <depend name="${HXCPP}/include/hx/CFFI.h"/>

  <compilerflag value="-I${ZLIB_DIR}"/>

  <file name="libs/zlib/ZLib.cpp"/>

  <file name="${ZLIB_DIR}/adler32.c"/>
  <file name="${ZLIB_DIR}/crc32.c"/>
  <file name="${ZLIB_DIR}/infback.c"/>
  <file name="${ZLIB_DIR}/inflate.c"/>
  <file name="${ZLIB_DIR}/uncompr.c"/>
  <file name="${ZLIB_DIR}/compress.c"/>
  <file name="${ZLIB_DIR}/deflate.c"/>
  <file name="${ZLIB_DIR}/gzio.c"/>
  <file name="${ZLIB_DIR}/inffast.c"/>
  <file name="${ZLIB_DIR}/inftrees.c"/>
  <file name="${ZLIB_DIR}/trees.c"/>
  <file name="${ZLIB_DIR}/zutil.c"/>
</files>




<target id="zlib" output="${LIBPREFIX}zlib${DBG}${LIBEXTRA}" tool="linker" toolid="${STD_MODULE_LINK}">
  <!-- <ext value=".ndll" unless="mobile"/>
  <ext value=".a" if="emscripten"/> -->
  <files id="zlib"/>
  <outdir name="../ndll/${BINDIR}"/>
</target>

<files id="nekoapi" dir="${RUNTIME}">
  <!-- <ext value=".ndll" unless="mobile"/> -->
  <depend name="libs/nekoapi/neko.h"/>
  <depend name="${HXCPP}/include/hx/Macros.h"/>
  <depend name="${HXCPP}/include/hx/CFFI.h"/>
  <file name="libs/nekoapi/NekoAPI.cpp"/>
  <compilerflag value="-Dneko_v1" if="neko_v1" />
</files>

<set name="NEKOPATH" value="${NEKO_INSTALL_PATH}" unless="NEKOPATH" if="NEKO_INSTALL_PATH" />
<set name="NEKOPATH" value="/usr/lib/neko" unless="NEKOPATH" />
<set name="neko_v2" value="1" unless="neko_v1" />

<target id="nekoapi" output="nekoapi" tool="linker" toolid="dll">
  <!-- <ext value=".ndll"/> -->
  <files id="nekoapi"/>
  <lib name="${RUNTIME}/libs/nekoapi/neko.lib" if="windows" unless="neko_v2" />
  <lib name="${RUNTIME}/libs/nekoapi/neko2.lib" if="windows" unless="neko_v1" />
  <lib name="-L${NEKOPATH}" unless="windows"/>
  <lib name="-lneko" unless="windows"/>
  <outdir name="../ndll/${BINDIR}"/>
</target>



<target id="default">
   <target id="std"/>
   <target id="regexp"/>
   <target id="zlib"/>
   <target id="nekoapi" if="windows" unless="HXCPP_M64"/>
   <target id="nekoapi" if="macos" />
   <target id="nekoapi" if="linux" />
</target>


</xml>
