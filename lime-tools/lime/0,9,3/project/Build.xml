<xml>
	
	<set name="GCC_THIN_ARCHIVE" value="1" if="iphone"/>
	<set name="GCC_THIN_ARCHIVE" value="1" if="emscripten"/>
	<set name="debug" value="debug" if ="fulldebug" />
	
	<set name="PLATFORM" value="android-9" if="android" unless="PLATFORM" />
	
	<include name="${HXCPP}/build-tool/BuildCommon.xml"/>

	<set name="HXCPP_M32" value="1" unless="HXCPP_M64" />
	
	<set name="iphonesim" value="1" if="ios" />
	<set name="iphoneos" value="1" if="ios" unless="simulator" />
	<set name="win_desktop" value="1" if="windows" unless="winrt"/>
	
	<set name="NATIVE_DEV" value="${haxelib:lime-build}" unless="NATIVE_DEV" />
	<!-- <error value="Error: You must clone 'openfl-native-dev' and 'haxelib dev' the directory before you can rebuild openfl-native" unless="NATIVE_DEV" /> -->
	
	<set name="has_window" value="1" if="LIME_SDL" />
	<set name="has_window" value="1" if="LIME_SDL2" />
	<set name="has_window" value="1" if="LIME_GLFW" />
	<set name="has_window" value="1" if="LIME_DIRECTFB" />
	<set name="sdl" value="1" if="LIME_SDL" />
	<set name="sdl2" value="1" if="LIME_SDL2" />
	<set name="glfw" value="1" if="LIME_GLFW" />
	<set name="directfb" value="1" if="LIME_DIRECTFB" />
	
	<set name="sdl" value="1" if="rpi" unless="has_window" />
	<set name="has_window" value="1" if="sdl" />
	
	<set name="sdl2" value="1" if="win_desktop" unless="has_window" />
	<set name="sdl2" value="1" if="macos" unless="has_window" />
	<set name="sdl2" value="1" if="linux" unless="has_window" />
	<set name="sdl" value="1" if="blackberry" unless="has_window" />
	<set name="sdl" value="1" if="emscripten" unless="has_window" />
	<!-- <set name="mac64" value="1" if="macos" unless="HXCPP_M32" />
	<set name="sdl2" value="1" if="mac64" unless="has_window" />
	<unset name="sdl" if="mac64" unless="has_window" /> -->
	<set name="has_window" value="1" if="sdl" />
	<set name="has_window" value="1" if="sdl2" />
	<set name="has_window" value="1" if="glfw" />
	<set name="has_window" value="1" if="directfb" />
	
	<set name="ogl" value="1" if="glfw"/>
	<set name="ogl" value="1" if="sdl"/>
	<set name="ogl" value="1" if="sdl2"/>
	<set name="ogl" value="1" if="gph"/>
	<set name="ogl" value="1" if="iphone"/>
	<set name="ogl" value="1" if="android"/>
	<set name="ogl" value="1" if="tizen"/>
	<set name="limeegl" value="1" if="rpi"/>
	<set name="limeegl" value="1" if="tizen"/>
	
	<set name="nocurl" value="1" if="winrt"/>
	<set name="nocurl" value="1" if="emscripten"/>
	<!-- <set name="nocurl" value="1" if="macos" unless="HXCPP_M32" /> -->
	<set name="nocurl" value="1" if="directfb" />
	
	<!-- <set name="LIME_FORCE_GLES1" value="1" if="iphone" /> -->
	
	<set name="sdl_image" value="1" if="emscripten" />
	
	<set name="ogl_shaders" value="1" unless="LIME_FORCE_GLES1" />
	
	<set name="openal" value="1" if="LIME_OPENAL" />
	<set name="openal" value="1" if="android" />
	<set name="openal" value="1" if="iphone" />
	<set name="openal" value="1" if="tizen" />
	<set name="has_sound" value="1" if="sdl" />
	<set name="has_sound" value="1" if="openal" />
	<set name="openal" value="1" if="sdl2" unless="has_sound" />
	<set name="noopenal" value="1" unless="openal" />
	<set name="has_sound" value="1" if="sdl2" />
	
	<set name="mobile" value="1" if="iphone"/>
	<set name="mobile" value="1" if="android"/>
	<set name="mobile" value="1" if="webos"/>
	<set name="mobile" value="1" if="blackberry"/>
	<set name="mobile" value="1" if="tizen"/>
	<set name="mobile" value="1" if="gph"/>
	
	<set name="ssl" value="1" unless="nossl"/>
	<set name="ssl_extra" value="_ssl" if="ssl"/>
	
	
	<files id="win_desktop">
		
		<compilerflag value="-Iinclude"/>
		<compilerflag value="-I${NATIVE_DEV}/include"/>
		<compilerflag value="-I${NATIVE_DEV}/include/SDL12" if="sdl" />
		<compilerflag value="-I${NATIVE_DEV}/include/SDL2" if="sdl2" />
		<compilerflag value="-I${NATIVE_DEV}/include/openal" if="openal" />
		<compilerflag value="-Isrc/sound/openal"/>		
		<file name="src/platform/windows/GDIFont.cpp"/>
		<file name="src/platform/windows/System.cpp" />
		<!-- Use SDL on windows too ? -->
		<!-- <file name="src/platform/windows/SimpleFrame.cpp" unless="sdl"/> -->
		<!-- <file name="src/backend/sdl/SDLSound.cpp" unless="sdl"/> -->
		<file name="src/common/empty/Sound.cpp" if="glfw" unless="openal" />
		<file name="src/sound/openal/OpenALSound.cpp" if="openal"/>
		<compilerflag value="-DAL_LIBTYPE_STATIC" if="openal"/>

	</files>
	
	
	<files id="winrt_shaders">
		<hlsl name="src\\platform\\winrt\\SimplePixelShader.hlsl" profile="ps_4_0" variable="gPixelShader" target="src\\platform\\winrt\\shaders\\SimplePixelShader.h"/>
		<hlsl name="src\\platform\\winrt\\SimpleVertexShader.hlsl" profile="vs_4_0" variable="gVertexShader" target="src\\platform\\winrt\\shaders\\SimpleVertexShader.h"/>
		<file name="src\\platform\\winrt/ShaderData.cpp" />
	</files>
	
	
	<files id="winrt">
		<compilerflag value="-Iinclude"/>
		<file name="src/platform/winrt/WinRTStage.cpp" />
		<file name="src/platform/winrt/DX11Context.cpp" />
		<file name="src/platform/winrt/DX11Font.cpp" />
		<file name="src/platform/winrt/System.cpp" />
		<file name="src/platform/winrt/MediaFoundation.cpp" />
		<file name="src/platform/winrt/Direct3DBase.cpp" />
		<file name="src/platform/winrt/URL.cpp" />
	</files>
	
	
	<files id="linux">
		
		<compilerflag value="-Iinclude"/>
		<compilerflag value="-Isrc/sound/openal" if="openal" />
		<compilerflag value="-I${NATIVE_DEV}/include" />
		<compilerflag value="-I${NATIVE_DEV}/include/openal" if="openal" />
		<compilerflag value="-DSDL_OGL" if="sdl"/>
		<file name="src/platform/linux/NativeFont.cpp"/>
		<file name="src/platform/linux/System.cpp"/>
		<file name="src/common/empty/URL.cpp" if="nocurl" />
		<file name="src/common/empty/Sound.cpp" if="noopenal" />
		<!-- <file name="src/common/empty/HardwareContext.cpp" unless="has_window" /> -->
		<file name="src/sound/openal/OpenALSound.cpp" if="openal" />
		
	</files>
	
	
	<files id="iphone">
		
		<compilerflag value="-Iinclude"/>
		<compilerflag value="-I${NATIVE_DEV}/include"/>
		<compilerflag value="-Isrc/sound/openal"/>
		<compilerflag value="-DLIME_FORCE_GLES1" if="LIME_FORCE_GLES1"/>
		<file name="src/platform/ios/UIStageView.mm"/>
		<file name="src/platform/ios/UIDeviceHardware.mm"/>
		<!-- <file name="src/platform/ios/SurfaceIO.mm"/> -->
		<file name="src/sound/openal/OpenALSound.cpp" />
		<file name="src/platform/ios/Sound.mm"/>
		<file name="src/platform/ios/NativeFont.mm"/>
		<file name="src/platform/ios/System.mm"/>
		<file name="src/platform/cocoa/FileManager.mm"/>
		
	</files>
	
	
	<files id="android">
		
		<compilerflag value="-Iinclude"/>
		<compilerflag value="-I${NATIVE_DEV}/include"/>
		<compilerflag value="-I${NATIVE_DEV}/include/openal" if="openal" />
		<compilerflag value="-Isrc/sound/openal"/>
		<file name="src/platform/android/AndroidCommon.cpp" />
		<file name="src/platform/android/AndroidSound.cpp" unless="openal"/>
		<file name="src/platform/android/AndroidFont.cpp"/>
		<file name="src/platform/android/AndroidFrame.cpp"/>
		<file name="src/platform/android/JNI.cpp"/>
		<file name="src/platform/android/System.cpp"/>
		<file name="src/sound/openal/OpenALSound.cpp" if="openal"/>
		<compilerflag value="-DAL_LIBTYPE_STATIC" if="openal"/>
		
	</files>
	
	<files id="emscripten">
		
		<compilerflag value="-Iinclude"/>
		<file name="src/platform/linux/NativeFont.cpp"/>
		<file name="src/platform/emscripten/System.cpp"/>
		
	</files>
	
	
	<set name="dynamic_sdl" value="1" if="webos"/>
	
	<files id="webos">
		
		<compilerflag value="-Iinclude"/>
		<compilerflag value="-I${PalmPDK}/include/SDL" />
		<compilerflag value="-I${NATIVE_DEV}/include"/>
		<file name="src/platform/linux/NativeFont.cpp"/>
		<file name="src/platform/webos/System.cpp"/>
		
	</files>
	
	
	<files id="blackberry">
		
		<compilerflag value="-Iinclude"/>
		<compilerflag value="-I${QNX_TARGET}/usr/include" />
		<compilerflag value="-I${NATIVE_DEV}/include"/>
		<file name="src/platform/linux/NativeFont.cpp"/>
		<file name="src/platform/blackberry/System.cpp"/>
		
	</files>
	
	
	<files id="tizen">
		
		<compilerflag value="-Iinclude"/>
		<!-- <compilerflag value="-I${QNX_TARGET}/usr/include" /> -->
		<compilerflag value="-I${TIZEN_PLATFORM}/usr/include/osp"/>
		<compilerflag value="-I${NATIVE_DEV}/include"/>
		<compilerflag value="-I${NATIVE_DEV}/include/openal" if="openal" />
		<compilerflag value="-Isrc/sound/openal"/>
		<compilerflag value="-D_APP_LOG" />
		<file name="src/platform/linux/NativeFont.cpp"/>
		<file name="src/platform/tizen/TizenApplication.cpp"/>
		<!-- <file name="src/platform/tizen/TizenUIApp.cpp"/>
		<file name="src/platform/tizen/TizenUIFrame.cpp"/> -->
		<file name="src/platform/tizen/TizenStage.cpp"/>
		<file name="src/platform/tizen/TizenFrame.cpp"/>
		<file name="src/platform/tizen/System.cpp" />
		<file name="src/sound/openal/OpenALSound.cpp" if="openal"/>
		
	</files>
	
	
	<files id="main">
		
		<compilerflag value="-Iinclude"/>
		<file name="src/Test.cpp"/>
		
	</files>
	
	
	<set name="THIRDPARTY_LIBS" value="${NATIVE_DEV}/lib/Mac${M64}/" if="macos"/>
	<set name="THIRDPARTY_LIBS" value="${NATIVE_DEV}/lib/Windows/" if="windows" unless="winrt"/>
	<set name="THIRDPARTY_LIBS" value="${NATIVE_DEV}/lib/WinRTx86/" if="winrt"/>
	<set name="THIRDPARTY_LIBS" value="${NATIVE_DEV}/lib/webOS/" if="webos" />
	<set name="THIRDPARTY_LIBS" value="${NATIVE_DEV}/lib/Linux${M64}/" if="linux"/>
	<set name="THIRDPARTY_LIBS" value="${NATIVE_DEV}/lib/RPi/" if="rpi"/>
	<set name="THIRDPARTY_LIBS" value="${NATIVE_DEV}/lib/Android/" if="android"/>
	<set name="THIRDPARTY_LIBS" value="${NATIVE_DEV}/lib/iPhone/" if="iphone"/>
	<set name="THIRDPARTY_LIBS" value="${NATIVE_DEV}/lib/BlackBerry/" if="blackberry"/>
	<set name="THIRDPARTY_LIBS" value="${NATIVE_DEV}/lib/Emscripten/" if="emscripten"/>
	<set name="THIRDPARTY_LIBS" value="${NATIVE_DEV}/lib/Tizen/" if="tizen"/>
	<set name="THIRDPARTY_LIBS" value="${GPH_ROOT}/gcc-4.2.4-glibc-2.7-eabi/arm-gph-linux-gnueabi/sys-root/usr/lib/" if="gph"/>
	
	<set name="SLIBEXT" value=".lib" if="windows"/>
	<set name="SLIBEXT" value=".a" unless="windows"/>
	<set name="SLIBEXT" value=".so" if="webos"/>
	<set name="SLIBEXT" value=".a" if="emscripten"/>
	
	
	<files id="common">
		
		<compilerflag value="-Iinclude"/>
		<compilerflag value="-I${PalmPDK}/include/SDL" if="webos" />
		<compilerflag value="-I${NATIVE_DEV}/include" unless="gph"/>
		<compilerflag value="-I${PalmPDK}/include/SDL" if="webos" />
		<compilerflag value="-I${NATIVE_DEV}/include/SDL12" if="sdl" unless="dynamic_sdl"/>
		<compilerflag value="-I${NATIVE_DEV}/include/SDL2" if="sdl2" />
		<compilerflag value="-I${GPH_ROOT}/gcc-4.2.4-glibc-2.7-eabi/arm-gph-linux-gnueabi/sys-root/usr/include" if="gph"/>
		<compilerflag value="-I${TIZEN_SDK}/platforms/tizen2.2/rootstraps/tizen-device-2.2.native/usr/include" if="tizen" />
		<compilerflag value="-I${TIZEN_SDK}/platforms/tizen2.2/rootstraps/tizen-device-2.2.native/usr/include/osp" if="tizen" />
		<compilerflag value="-I/opt/vc/include" if="rpi"/>
		<compilerflag value="-I/opt/vc/include/interface/vcos/pthreads/" if="rpi"/>
		<compilerflag value="-I${GPH_ROOT}/include/freetype2" if="gph"/>
		<compilerflag value="-I${GPH_ROOT}/DGE/include" if="gph"/>
		<compilerflag value="-I${QNX_TARGET}/usr/include" if="blackberry"/>
		<!-- <compilerflag value="-I${QNX_TARGET}/usr/include/GLES" if="blackberry"/> -->
		<compilerflag value="-I${QNX_TARGET}/usr/include/GLES2" if="blackberry"/>
		<compilerflag value="-DLIME_DIRECTFB" if="directfb"/>
		<compilerflag value="-DSDL_OGL" if="sdl"/>
		<compilerflag value="-DSDL_OGL" if="sdl2"/>
		<compilerflag value="-DGLFW_OGL" if="glfw"/>
		<compilerflag value="-DLIME_CURL_SSL" if="ssl" unless="nocurl"/>
		<compilerflag value="-DLIME_FORCE_GLES1" if="LIME_FORCE_GLES1"/>
		<compilerflag value="-Wno-conversion" if="linux"/>

		<!-- <file name="src/common/Surface.cpp"/> -->
		<file name="src/renderer/common/Surface.cpp"/>
		<file name="src/renderer/common/HardwareSurface.cpp"/>
		<file name="src/renderer/common/SimpleSurface.cpp"/>
		<file name="src/renderer/common/BitmapCache.cpp"/>
		<file name="src/common/Utils.cpp"/>
		<file name="src/common/Geom.cpp"/>
		<file name="src/common/Graphics.cpp"/>
		<file name="src/common/GraphicsData.cpp"/>
		<file name="src/common/Matrix.cpp"/>
		<file name="src/common/CachedExtent.cpp"/>
		<file name="src/common/TextField.cpp"/>
		<file name="src/common/Font.cpp"/>
		<file name="src/common/FreeType.cpp" />
		<file name="src/common/Tilesheet.cpp"/>
		<file name="src/common/Display.cpp"/>
		<file name="src/common/ColorTransform.cpp"/>
		<file name="src/common/Hardware.cpp" unless="directfb"/>
		<file name="src/common/Tessellate.cpp"/>
		<file name="src/common/Filters.cpp"/>
		<file name="src/common/ExternalInterface.cpp"/>
		<file name="src/common/Cursors.cpp"/>
		<file name="src/common/Input.cpp" unless="iphone" />
		<file name="src/common/SurfaceIO.cpp" unless="sdl_image" />
		<file name="src/common/ManagedStage.cpp" unless="winrt" />
		<file name="src/common/CURL.cpp" unless="nocurl"/>
		<file name="src/common/Lzma.cpp"/>
		<file name="src/common/Thread.cpp"/>
		<file name="src/common/Audio.cpp" if="openal"/>
		<file name="src/common/video/TheoraVideo.cpp" if="theora" />
		<file name="src/common/empty/Video.cpp" unless="theora" />
		
		<file name="src/common/XML/tinystr.cpp"/>
		<file name="src/common/XML/tinyxml.cpp"/>
		<file name="src/common/XML/tinyxmlerror.cpp"/>
		<file name="src/common/XML/tinyxmlparser.cpp"/>
		
		<file name="src/renderer/software/AlphaMask.cpp"/>
		<file name="src/renderer/software/BitmapFill.cpp"/>
		<file name="src/renderer/software/BitmapFillPerspective.cpp"/>
		<file name="src/renderer/software/GradientFill.cpp"/>
		<file name="src/renderer/software/LineRender.cpp"/>
		<file name="src/renderer/software/PointRenderer.cpp"/>
		<file name="src/renderer/software/PolygonRender.cpp"/>
		<file name="src/renderer/software/SoftwareRenderer.cpp"/>
		<file name="src/renderer/software/SolidFill.cpp"/>
		<file name="src/renderer/software/SolidRender.cpp"/>
		<file name="src/renderer/software/TileRenderer.cpp"/>
		<file name="src/renderer/software/TriangleRender.cpp"/>
	</files>
	
	<files id="opengl">
		<compilerflag value="-Iinclude"/>
		<compilerflag value="-I${PalmPDK}/include/SDL" if="webos" />
		<compilerflag value="-I${NATIVE_DEV}/include" unless="gph"/>
		<compilerflag value="-I${PalmPDK}/include/SDL" if="webos" />
		<compilerflag value="-I${NATIVE_DEV}/include/SDL12" if="sdl" unless="dynamic_sdl"/>
		<compilerflag value="-I${NATIVE_DEV}/include/SDL2" if="sdl2" />
		<compilerflag value="-I/opt/vc/include" if="rpi"/>
		<compilerflag value="-I/opt/vc/include/interface/vcos/pthreads/" if="rpi"/>
		<compilerflag value="-I${QNX_TARGET}/usr/include" if="blackberry"/>
		<!-- <compilerflag value="-I${QNX_TARGET}/usr/include/GLES" if="blackberry"/> -->
		<compilerflag value="-I${QNX_TARGET}/usr/include/GLES2" if="blackberry"/>
		<compilerflag value="-I${TIZEN_SDK}/platforms/tizen2.2/rootstraps/tizen-device-2.2.native/usr/include" if="tizen" />
		<compilerflag value="-I${TIZEN_SDK}/platforms/tizen2.2/rootstraps/tizen-device-2.2.native/usr/include/osp" if="tizen" />
		<compilerflag value="-DLIME_DIRECTFB" if="directfb"/>
		<compilerflag value="-DSDL_OGL" if="sdl"/>
		<compilerflag value="-DSDL_OGL" if="sdl2"/>
		<compilerflag value="-DGLFW_OGL" if="glfw"/>
		<compilerflag value="-DLIME_CURL_SSL" if="ssl" unless="nocurl"/>
		<compilerflag value="-DLIME_FORCE_GLES1" if="LIME_FORCE_GLES1"/>
		<compilerflag value="-Wno-conversion" if="linux"/>
		
		<file name="src/renderer/opengl/OpenGLInit.cpp"/>
		<file name="src/renderer/opengl/OpenGLContext.cpp"/>
		<file name="src/renderer/opengl/OpenGL2Context.cpp"/>
		<file name="src/renderer/opengl/OpenGLTexture.cpp"/>
		<file name="src/renderer/opengl/OpenGLProgram.cpp"/>
		<file name="src/renderer/opengl/OpenGLShaders.cpp"/>
		<file name="src/renderer/opengl/OGLExport.cpp" unless="LIME_FORCE_GLES1"/>
		<file name="src/renderer/opengl/Egl.cpp" if="limeegl"/>
	</files>
	
	<files id="common_lzma">
		<compilerflag value="-D_7ZIP_ST" unless="win_desktop"/>
		
		<file name="src/common/lzma/LzFind.c" />
		<file name="src/common/lzma/LzmaDec.c" />
		<file name="src/common/lzma/LzmaEnc.c" />
		<file name="src/common/lzma/LzFindMt.c" if="win_desktop" />
		<file name="src/common/lzma/Threads.c" if="win_desktop" />
	</files>
	
	<set name="tool" value="exe" unless="iphone"/>
	<set name="tool" value="static_link" if="iphone"/>
	<set name="tool" value="static_link" if="emscripten"/>
	
	<set name="ARM_ARCH" value="-v7" if="HXCPP_ARMV7" />
	
	<set name="ndll-tool" value="dll" unless="iphone"/>
	<set name="ndll-tool" value="static_link" if="iphone"/>
	<set name="ndll-tool" value="static_link" if="emscripten"/>
	<set name="name_extra" value=".iphonesim" if="iphonesim"/>
	<set name="name_extra" value=".iphoneos${ARM_ARCH}" if="iphoneos"/>
	<set name="name_extra" value="-v7" if="android" />
	<set name="name_extra" value="" if="android" unless="HXCPP_ARMV7" />
	
	<set name="name_extra" value="-x86" if="simulator" unless="iphonesim" />
	<set name="ndll_name_extra" value="${name_extra}" unless="android" />
	
	<set name="debug_extra" value="-debug" if="fulldebug" />
	
	<!-- <section if="fulldebug" >
		<set name="name_extra" value=".debug"/>
		<set name="name_extra" value=".debug-x86" if="simulator" unless="iphonesim" />
		<set name="name_extra" value=".debug.iphoneos${IOS_ARCH}" if="iphoneos"/>
		<set name="name_extra" value=".debug.iphonesim" if="iphonesim"/>
	</section> -->
	
	<set name="no_thirdparty_extras" value="1" if="iphone"/>
	<set name="no_thirdparty_extras" value="1" if="emscripten"/>
	<set name="no_thirdparty_extras" value="1" if="gph"/>
	
	<set name="sdl_static" value="1" unless="mobile"/>
	<unset name="sdl_static" if="emscripten" />
	<unset name="sdl_static" unless="sdl" />
	<set name="sdl_static" value="1" if="blackberry"/>
	<unset name="sdl_static" if="dynamic_sdl"/>
	<unset name="sdl_static" if="winrt"/>
	<set name="no_thirdparty_extras" value="1" if="dynamic_sdl"/>
	
	<set name="sdl_dynamic_path" value="-L/opt/local/lib" if="macos" />
	<set name="sdl_dynamic_include1" value="-I/opt/local/include" if="macos" />
	<set name="sdl_dynamic_include2" value="-I/opt/local/include/SDL-hidden" if="macos" />
	<set name="sdl_dynamic_include1" value="-I${PalmPDK}/include/SDL" if="webos" />
	<set name="sdl_dynamic_include1" value="-I/usr/include/SDL" if="linux" />
	
	
	<files id="sdl">
		
		<compilerflag value="-Iinclude"/>
		<compilerflag value="-I${PalmPDK}/include/SDL" if="webos" />
		<compilerflag value="-I${NATIVE_DEV}/include" if="sdl_static"/>
		<compilerflag value="-I${NATIVE_DEV}/include/SDL12" if="sdl_static"/>
		<compilerflag value="-I${NATIVE_DEV}/include" if="webos"/>
		<compilerflag value="${sdl_dynamic_include1}" if="dynamic_sdl"/>
		<compilerflag value="${sdl_dynamic_include2}" if="dynamic_sdl"/>
		<compilerflag value="-DDYNAMIC_SDL" if="dynamic_sdl" />
		<compilerflag value="-DLIME_MIXER" />
		<compilerflag value="-DSDL_IMAGE" if="sdl_image" />
		<file name="src/backend/sdl/SDLStage.cpp"/>
		<file name="src/backend/sdl/SDLSound.cpp" unless="openal"/>
		
	</files>
	
	
	<files id="sdl2">
		
		<compilerflag value="-Iinclude"/>
		<compilerflag value="-I${NATIVE_DEV}/include"/>
		<compilerflag value="-I${NATIVE_DEV}/include/SDL2"/>
		<!-- <compilerflag value="-DLIME_MIXER" /> -->
		<file name="src/backend/sdl2/SDL2Stage.cpp"/>
		<!-- <file name="src/backend/sdl/SDLSound.cpp" unless="openal"/> -->
		<file name="src/common/empty/Sound.cpp" unless="openal" />
		
	</files>
	
	
	<files id="glfw">
		
		<compilerflag value="-Iinclude"/>
		<compilerflag value="-I${NATIVE_DEV}/include"/>
		<file name="src/backend/glfw/GLFWStage.cpp"/>
		
	</files>
	
	
	<files id="directfb">
		
		<compilerflag value="-Iinclude"/>
		<compilerflag value="-I/usr/include/directfb" />
		<compilerflag value="-I${NATIVE_DEV}/include"/>
		<compilerflag value="-DLIME_DIRECTFB"/>
		
		<file name="src/backend/directfb/DirectFBHardware.cpp"/>
		<file name="src/backend/directfb/DirectFBStage.cpp"/>
		
	</files>
	
	
	<files id="mac">
		
		<compilerflag value="-Iinclude"/>
		<compilerflag value="-I${NATIVE_DEV}/include" />
		<compilerflag value="-I${NATIVE_DEV}/include/SDL12" if="sdl" />
		<compilerflag value="-I${NATIVE_DEV}/include/SDL2" if="sdl2" />
		<compilerflag value="${sdl_dynamic_include2}" if="dynamic_sdl"/>
		<compilerflag value="-Isrc/sound/openal"/>
		<compilerflag value="-mmacosx-version-min=10.7" if="macos"/>
		<file name="src/platform/mac/NSFont.cpp"/>
		<file name="src/platform/mac/MacBoot.m" />
		<file name="src/common/empty/URL.cpp" if="nocurl" />
		<file name="src/common/empty/Sound.cpp" unless="has_sound" />
		<file name="src/common/empty/Stage.cpp" unless="has_window" />
		<file name="src/common/empty/HardwareContext.cpp" unless="has_window" />
		<file name="src/platform/mac/System.mm"/>
		<file name="src/platform/cocoa/FileManager.mm"/>
		<file name="src/sound/openal/OpenALSound.cpp" if="openal"/>
			
	</files>
	
	
	<set name="name_prefix" value="lib" if="iphone" />
	
	
	<target id="NDLL" output="${name_prefix}lime${debug_extra}${ndll_name_extra}" tool="linker" toolid="${ndll-tool}">
		
		<outdir name="../ndll/${BINDIR}" />
		<ext value=".ndll" unless="mobile"/>
		<ext value=".a" if="emscripten"/>
		<ext value=".ndll" if="gph"/>
		
		<flag value="-NODEFAULTLIB:LIBCMT" if="winrt"/>
		<flag value="-NODEFAULTLIB:LIBCMT" if="glfw"/>
		
		<files id="common"/>
		<files id="opengl" if="ogl"/>
		<files id="common_lzma"/>
		<files id="win_desktop" if="win_desktop"/>
		<files id="winrt_shaders" if="winrt"/>
		<files id="winrt" if="winrt"/>
		<files id="iphone" if="iphone"/>
		<files id="mac" if="macos"/>
		<files id="linux" if="linux"/>
		<files id="gph" if="gph"/>
		<files id="sdl" if="sdl"/>
		<files id="sdl2" if="sdl2"/>
		<files id="glfw" if="glfw"/>
		<files id="directfb" if="directfb" />
		<files id="android" if="android"/>
		<files id="webos" if="webos"/>
		<files id="blackberry" if="blackberry"/>
		<files id="emscripten" if="emscripten"/>
		<files id="tizen" if="tizen"/>
		
		<lib name="${THIRDPARTY_LIBS}libfreetype${name_extra}${SLIBEXT}" if="iphone"/>
		<lib name="${THIRDPARTY_LIBS}libfreetype${name_extra}${SLIBEXT}" unless="no_thirdparty_extras"/>
		<lib name="${THIRDPARTY_LIBS}libjpeg${name_extra}${SLIBEXT}" unless="no_thirdparty_extras"/>
		<lib name="${THIRDPARTY_LIBS}libpng${name_extra}${SLIBEXT}" unless="no_thirdparty_extras"/>
		<lib name="${THIRDPARTY_LIBS}libz${name_extra}${SLIBEXT}" if="windows"/>
		<lib name="${THIRDPARTY_LIBS}libz${name_extra}${SLIBEXT}" if="macos" unless="dynamic_sdl"/>
		<lib name="${THIRDPARTY_LIBS}libz${name_extra}${SLIBEXT}" if="linux" unless="dynamic_sdl"/>
		<lib name="${THIRDPARTY_LIBS}libz${name_extra}${SLIBEXT}" if="tizen" />
		
		<lib name="${THIRDPARTY_LIBS}libSDL_mixer${name_extra}${SLIBEXT}" if="sdl" unless="dynamic_sdl || emscripten" />
		<lib name="${THIRDPARTY_LIBS}libSDL_image${name_extra}${SLIBEXT}" if="sdl_image" unless="dynamic_sdl || emscripten" />
		<lib name="${THIRDPARTY_LIBS}libSDL${name_extra}${SLIBEXT}" if="sdl_static" unless="blackberry" />
		<lib name="${THIRDPARTY_LIBS}libSDL2${name_extra}${SLIBEXT}" if="sdl2" />
		<!-- <lib name="${THIRDPARTY_LIBS}libSDL2main${name_extra}${SLIBEXT}" if="windows" unless="sdl" /> -->
		<!-- <lib name="${THIRDPARTY_LIBS}libopenal${name_extra}${SLIBEXT}" if="android" unless="noopenal"/> -->
		<lib name="${THIRDPARTY_LIBS}libopenal${name_extra}${SLIBEXT}" if="linux" unless="noopenal"/>
		<lib name="${THIRDPARTY_LIBS}libvorbis${name_extra}${SLIBEXT}" if="sdl_static"/>
		<lib name="${THIRDPARTY_LIBS}libvorbis${name_extra}${SLIBEXT}" if="openal" unless="sdl_static" />
		<lib name="${THIRDPARTY_LIBS}libogg${name_extra}${SLIBEXT}" if="sdl_static"/>
		<lib name="${THIRDPARTY_LIBS}libogg${name_extra}${SLIBEXT}" if="openal" unless="sdl_static" />
		<lib name="${THIRDPARTY_LIBS}libtheora${name_extra}${SLIBEXT}" if="theora" unless="sdl_static" />
		<lib name="${THIRDPARTY_LIBS}libsmpeg${name_extra}${SLIBEXT}" if="sdl_static"/>
		<lib name="${THIRDPARTY_LIBS}libcurl${ssl_extra}${name_extra}${SLIBEXT}" if="sdl_static" unless="iphone"/>
		<lib name="${THIRDPARTY_LIBS}libcurl${ssl_extra}${name_extra}${SLIBEXT}" if="sdl2"/>
		<lib name="${THIRDPARTY_LIBS}libcurl${ssl_extra}${name_extra}${SLIBEXT}" if="glfw"/>
		<lib name="${THIRDPARTY_LIBS}libcurl${ssl_extra}${name_extra}${SLIBEXT}" if="android"/>
		<lib name="${THIRDPARTY_LIBS}libcurl${ssl_extra}${name_extra}${SLIBEXT}" if="tizen"/>
		<lib name="${THIRDPARTY_LIBS}libglfw3${name_extra}${SLIBEXT}" if="glfw"/>
		
		<lib name="-L${THIRDPARTY_LIBS}" if="tizen"/>
	  <lib name="-losp-uifw" if="tizen" />
	  <lib name="-losp-appfw" if="tizen" />
	  <lib name="-losp-image" if="tizen" />
	  <lib name="-losp-ime" if="tizen" />
	  <lib name="-losp-net" if="tizen" />
	  <lib name="-losp-content" if="tizen" />
	  <lib name="-losp-locations" if="tizen" />
	  <lib name="-losp-telephony" if="tizen" />
	  <lib name="-losp-uix" if="tizen" />
	  <lib name="-losp-media" if="tizen" />
	  <lib name="-losp-messaging" if="tizen" />
	  <lib name="-losp-web" if="tizen" />
	  <lib name="-losp-social" if="tizen" />
	  <lib name="-losp-wifi" if="tizen" />
	  <lib name="-losp-bluetooth" if="tizen" />
	  <lib name="-losp-nfc" if="tizen" />
	  <lib name="-losp-face" if="tizen" />
	  <lib name="-losp-secure-element" if="tizen" />
	  <lib name="-losp-speech-tts" if="tizen" />
	  <lib name="-losp-speech-stt" if="tizen" />
	  <lib name="-losp-shell" if="tizen" />
	  <lib name="-losp-shell-core" if="tizen" />
	  <lib name="-losp-vision" if="tizen" />
	  <lib name="-lxml2" if="tizen" />
	  <lib name="-lalut" if="tizen" />
	  <lib name="-lopenal" if="tizen" />
	  <lib name="-losp-compat" if="tizen" />
	  <lib name="-lrt" if="tizen" />
	  
		<lib name="-L${THIRDPARTY_LIBS}" if="linux"/>
		<lib name="-lrt" if="linux" unless="noopenal" />
		<!-- <lib name="-lopenal" if="linux" unless="noopenal" /> -->
		
		<lib name="-L${THIRDPARTY_LIBS}" if="webos"/>
		<lib name="-L../ndll/BlackBerry" if="blackberry"/>
		
		<lib name="-lSDL" if="dynamic_sdl"/>
		<!-- <lib name="-lSDL_image" if="sdl_image" unless="sdl_static"/> -->
		<lib name="-lSDL_mixer" if="dynamic_sdl"/>
		<lib name="-lvorbis" if="dynamic_sdl" unless="webos"/>
		<lib name="-logg" if="dynamic_sdl" unless="webos"/>
		<lib name="-lsmpeg" if="dynamic_sdl" unless="webos"/>
		<!--<lib name="-lfreetype" if="dynamic_sdl" unless="webos"/>
		<lib name="${THIRDPARTY_LIBS}libfreetype.a" if="webos"/>-->
		<lib name="${THIRDPARTY_LIBS}libfreetype.a" if="dynamic_sdl"/>
		
		<lib name="-lcurl" if="dynamic_sdl" unless="nocurl"/>
		<lib name="-lpng" if="dynamic_sdl"/>
		<lib name="-ljpeg" if="dynamic_sdl"/>
		<lib name="-lz" if="dynamic_sdl"/>
		
		<flag value="${sdl_dynamic_path}" if="dynamic_sdl"/>
		
		<flag value="-mmacosx-version-min=10.7" if="macos"/>
		
		<vflag name="-framework" value="IOKit" if="macos"/>
		<vflag name="-framework" value="Foundation" if="macos"/>
		<!-- <vflag name="-framework" value="AVFoundation" if="macos"/> -->
		<vflag name="-framework" value="CoreAudio" if="macos"/>
		<vflag name="-framework" value="Carbon" if="macos"/>
		<vflag name="-framework" value="AudioToolbox" if="macos"/>
		<vflag name="-framework" value="AudioUnit" if="macos"/>
		<vflag name="-framework" value="ForceFeedback" if="macos"/>
		<vflag name="-framework" value="Cocoa" if="macos"/>
		<vflag name="-framework" value="OpenGL" if="macos"/>
		<vflag name="-framework" value="QuickTime" if="macos" unless="HXCPP_M64"/>
		<vflag name="-framework" value="AppKit" if="macos"/>
		<vflag name="-framework" value="OpenAL" if="macos" unless="noopenal"/>
		
		<lib name="-ldl" if="android"/>
		<lib name="-landroid" if="android"/>
		<lib name="-lGLESv1_CM" if="android" unless="ogl_shaders"/>
		<lib name="-lGLESv2" if="android"/>
		<lib name="-lz" if="android"/>
		<lib name="-L../ndll/Android" if="android" unless="noopenal"/>
		<lib name="-lopenal" if="android" unless="noopenal"/>
		
		<lib name="-lGLES_CM" if="webos" unless="ogl_shaders"/>
		<lib name="-lGLESv2" if="webos"/>
		<lib name="-lpdl" if="webos"/>
		
		<lib name="-lSDL${name_extra}" if="blackberry"/>
		
		<lib name="-lbps" if="blackberry"/>
		<lib name="-lscreen" if="blackberry"/>
		<lib name="-lEGL" if="blackberry"/>
		
		<!-- <lib name="-lGLESv1_CM" if="blackberry"/> -->
		<lib name="-lGLESv2" if="blackberry" />
		
		<lib name="-ldirectfb" if="directfb" />
		
		<lib name="/opt/vc/lib/libGLESv1_CM.so" if="rpi" unless="ogl_shaders"/>
		<lib name="/opt/vc/lib/libGLESv2.so" if="rpi"/>
		<lib name="/opt/vc/lib/libEGL.so" if="rpi"/>
		<lib name="/opt/vc/lib/libbcm_host.so" if="rpi"/>
		
		<lib name="-lm" if="blackberry"/>
		<lib name="-lsocket" if="blackberry"/>
		
		<lib name="gdi32.lib" if="win_desktop" />
		<lib name="opengl32.lib" if="win_desktop" />
		<lib name="${THIRDPARTY_LIBS}libOpenAL32${SLIBEXT}" if="windows" unless="noopenal"/>
		<!-- <lib name="${THIRDPARTY_LIBS}libOpenAL32_dynamic${SLIBEXT}" if="openal_link_dynamic"/> -->
		<lib name="user32.lib" if="win_desktop"/>
		<lib name="kernel32.lib" if="win_desktop" unless="sdl2"/>
		<lib name="advapi32.lib" if="win_desktop" unless="sdl2"/>
		<lib name="${THIRDPARTY_LIBS}dxguid.lib" if="win_desktop"/>
		<lib name="winmm.lib" if="win_desktop"/>
		<lib name="imm32.lib" if="win_desktop" />
		<lib name="ole32.lib" if="win_desktop" unless="noopenal"/>
		<lib name="oleaut32.lib" if="win_desktop" unless="noopenal" />
		<lib name="version.lib" if="win_desktop" />
		<lib name="ws2_32.lib" if="win_desktop" unless="sdl2"/>
		<lib name="wldap32.lib" if="win_desktop"/>
		<lib name="shell32.lib" if="win_desktop"/>
		<lib name="comdlg32.lib" if="win_desktop"/>
		<lib name="-ldl" if="linux"/>
		<lib name="-lGL" if="linux" unless="rpi"/>
		<lib name="-lpthread" if="linux"/>
		
		<lib name="D3D11.lib" if="winrt"/>
		
		<flag value="-L${GPH_ROOT}/DGE/lib/target" if="gph"/>
		<lib name="-ldge20" if="gph"/>
		<lib name="-ldgx20" if="gph"/>
		<lib name="-lopengles_lite" if="gph"/>
		<lib name="-lfreetype" if="gph"/>
		<lib name="-lopenal11" if="gph"/>
		<lib name="-lopenalut11" if="gph"/>
		<lib name="-lts" if="gph"/>
		<lib name="-lpthread" if="gph"/>
		<lib name="-lpng" if="gph"/>
		<lib name="-ljpeg" if="gph"/>
		<lib name="-lz" if="gph"/>
		
	</target>
	
	
	<target id="default">
		
		<target id="NDLL"/>
		
	</target>
	
	
</xml>
